name: Publish the new release

on:
  pull_request:
    branches:
      - master
# on:
#   push:
#     tags:
#       - v*

env:
  HANDLE: hoodik
  NAME: Hoodik

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # - name: Extract Tag
      #   id: tag
      #   uses: aaronbarnaby/get-tag@v1.0.0
      #   with:
      #     without_prefix_v: true

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          override: true
          
      - name: Install cross-compilation tools and libraries for ARM
        run: |
          dpkg --add-architecture armhf
          sed 's/deb http/deb \[arch=amd64,i386\] http/' -i /etc/apt/sources.list
          echo >/etc/apt/sources.list <<EOF
          deb [arch=armhf] http://ports.ubuntu.com/ $(lsb_release -cs) main universe restricted multiverse
          deb [arch=armhf] http://ports.ubuntu.com/ $(lsb_release -cs)-updates main universe restricted multiverse
          deb [arch=armhf] http://ports.ubuntu.com/ $(lsb_release -cs)-security main universe restricted multiverse
          EOF
          sudo apt-get update
          sudo apt-get install -y gcc-arm-linux-gnueabihf libssl-dev:armhf
          rustup target add armv7-unknown-linux-gnueabihf

      - name: Install wasm pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      # - name: Log in to Docker Hub
      #   uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      # - name: Log in to GitHub Container Registry
      #   uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.repository_owner }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Extract metadata (tags, labels) for Docker
      #   id: meta
      #   uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      #   with:
      #     images: ${{ secrets.DOCKER_USERNAME }}/hoodik
      #     tags: ${{ steps.tag.outputs.tag }}

      - name: Generate .env
        run: |
          echo "APP_VERSION=test-version" >> $PWD/.env
          echo "NAME=${{ env.NAME }}" >> $PWD/.env

      - name: Install yarn
        run: npm install -g yarn

      - name: Install yarn dependencies
        run: yarn install

      - name: Wasm pack cryptfns
        run: yarn workspace @hoodik/cryptfns wasm-pack

      - name: Build web
        run: yarn workspace @hoodik/web build
        
      # - name: Build Rust binary for x86
      #   run: cargo build --bin hoodik --release
      #   env:
      #     CARGO_TARGET_DIR: target/x86_64


      - name: Build Rust binary for ARM
        run: PKG_CONFIG_PATH=/usr/lib/arm-linux-gnueabihf/pkgconfig PKG_CONFIG_ALLOW_CROSS=1 cargo build --bin hoodik --release --target=arm-unknown-linux-gnueabihf
        env:
          CARGO_TARGET_DIR: target/arm
          CC_armv7_unknown_linux_gnueabihf: arm-linux-gnueabihf-gcc

      # - name: Build and push Docker image
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: .
      #     push: true
      #     tags: |
      #       ${{ secrets.DOCKER_USERNAME }}/${{ env.HANDLE }}:v${{ steps.tag.outputs.tag }}
      #       ${{ secrets.DOCKER_USERNAME }}/${{ env.HANDLE }}:latest
      #       ghcr.io/${{ github.repository_owner }}/${{ env.HANDLE }}:v${{ steps.tag.outputs.tag }}
      #       ghcr.io/${{ github.repository_owner }}/${{ env.HANDLE }}:latest
      #     labels: ${{ steps.meta.outputs.labels }}

      # - name: Update repo description
      #   uses: peter-evans/dockerhub-description@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}
      #     repository: ${{ secrets.DOCKER_USERNAME }}/${{ env.HANDLE }}
      #     short-description: ${{ github.event.repository.description }}
      #     readme-filepath: ./README.md
      #     enable-url-completion: true
